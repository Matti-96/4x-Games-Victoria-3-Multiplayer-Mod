srbe_effect_add_resource = {
	if = {
		limit = {
			has_variable = srbe_var_add_$resource_1$
		}
		if = {
			limit = {
				OR = {
					gold_reserves > 0
					NOT = { has_variable = srbe_var_add_resource_debt_control }
				}
			}
			#if = {
				#limit = { has_modifier = srbe_modifier_add_$resource_1$_cost }
				remove_modifier = srbe_modifier_add_$resource_1$_cost
			#}
			if = {
				limit = { has_variable = srbe_var_add_$resource_1$_subjects }
				add_modifier = {
					name = srbe_modifier_add_$resource_1$_cost
					multiplier = {
						add = srbe_value_money_cost_for_research
						add = srbe_value_money_cost_for_research
					}
				}
			}
			else = {
				add_modifier = {
					name = srbe_modifier_add_$resource_1$_cost
					multiplier = srbe_value_money_cost_for_research
				}
			}
			random_list = {
				90 = {}
				10 = {
					change_variable = {
						name = srbe_var_count_1_$resource_1$
						add = srbe_value_max_level_change_$resource_1$
					}
					if = {
						limit = { has_modifier = srbe_modifier_add_$resource_1$ }
						remove_modifier = srbe_modifier_add_$resource_1$
					}
					add_modifier = {
						name = srbe_modifier_add_$resource_1$
						multiplier = root.var:srbe_var_count_1_$resource_1$
					}
					if = {
						limit = { has_variable = srbe_var_add_$resource_1$_subjects }
						change_variable = {
							name = srbe_var_count_2_$resource_1$
							add = srbe_value_max_level_change_subjects_$resource_1$
						}
						every_subject_or_below = {
							limit = {}
							if = {
								limit = {
									NOT = { has_variable = srbe_var_count_$resource_1$_subjects }
								}
								set_variable = {
									name = srbe_var_count_$resource_1$_subjects
									value = 0
								}
							}
							if = {
								limit = {
									has_variable = srbe_var_count_$resource_1$_subjects
									root.var:srbe_var_count_2_$resource_1$ > var:srbe_var_count_$resource_1$_subjects
								}
								change_variable = {
									name = srbe_var_count_$resource_1$_subjects
									multiply = 0
								}
								change_variable = {
									name = srbe_var_count_$resource_1$_subjects
									add = root.var:srbe_var_count_2_$resource_1$
								}
								if = {
									limit = { has_modifier = srbe_modifier_add_$resource_1$_subjects }
									remove_modifier = srbe_modifier_add_$resource_1$_subjects
								}
								add_modifier = {
									name = srbe_modifier_add_$resource_1$_subjects
									multiplier = root.var:srbe_var_count_2_$resource_1$
								}
							}
						}
					}
					if = {
						limit = { NOT = {has_variable = srbe_var_add_resource_progress } }
						set_variable = srbe_var_add_resource_progress
					}
				}
			}
		}
		else = {
			#if = {
				#limit = { has_modifier = srbe_modifier_add_$resource_1$_cost }
				remove_modifier = srbe_modifier_add_$resource_1$_cost
			#}
			add_modifier = {
				name = srbe_modifier_add_$resource_1$_cost
				multiplier = 0
			}
		}
	}
}

srbe_effect_add_arable_land = {
	if = {
		limit = {
			has_variable = srbe_var_add_arable_land_budget_num
			var:srbe_var_add_arable_land_budget_num > 0
			any_scope_state = {
				free_arable_land <= 20
				percent >= 0.7
			}
		}
		random_scope_state = {
			limit = {}
			root = {
				set_variable = {
					name = srbe_var_random_state_population
					value = prev.state_population
				}
			}
		}
		if = {
			limit = { has_variable = srbe_var_random_state_population } # has_variable to avoid error log
			ordered_scope_state = {
				limit = {
					free_arable_land <= 3
					OR = {
						arable_land >= 100
						AND = {
							arable_land >= 70
							OR = {
								has_building = building_tea_plantation
								can_construct_building = building_tea_plantation
								has_building = building_coffee_plantation
								can_construct_building = building_coffee_plantation
								has_building = building_opium_plantation
								can_construct_building = building_opium_plantation
							}
						}
					}
					is_split_state = no
				}
				order_by = {
					value = state_population
					if = {
						limit = { state_population > root.var:srbe_var_random_state_population }
						multiply = 0.5
					}
				}
				min = 0
				max = root.var:srbe_var_add_arable_land_budget_num
				check_range_bounds = no
				if ={
					limit= {
						root = { gold_reserves >= 500000 }
					}
					state_region = { add_arable_land = 50 }
					root = { add_treasury = -500000 }
				}
			}
			remove_variable = srbe_var_random_state_population
		}
	}
}

srbe_effect_add_arable_land_subjects = {
	if = {
		limit = {
			has_variable = srbe_var_add_arable_land_budget_num_subjects
			var:srbe_var_add_arable_land_budget_num_subjects > 0
		}
		while = {
			count = 3
			random_subject_or_below = {
				limit = {
					any_scope_state = {
						OR = {
							arable_land >= 100
							AND = {
								arable_land >= 70
								OR = {
									has_building = building_tea_plantation
									can_construct_building = building_tea_plantation
									has_building = building_coffee_plantation
									can_construct_building = building_coffee_plantation
									has_building = building_opium_plantation
									can_construct_building = building_opium_plantation
								}
							}
						}
						free_arable_land <= 3
						is_split_state = no
					}
					any_scope_state = {
						free_arable_land <= 20
						percent >= 0.7
					}
					is_direct_subject_of = root
					NOT = { has_variable = srbe_var_added_arable_land_in_this_subject }
				}
				random_scope_state = {
					limit = {}
					root = {
						set_variable = {
							name = srbe_var_random_state_population_subjects
							value = prev.state_population
						}
					}
				}
				if = {
					limit = { has_variable = srbe_var_random_state_population_subjects } # to avoid error log
					ordered_scope_state = {
						limit = {
							free_arable_land <= 3
							OR = {
								arable_land >= 100
								AND = {
									arable_land >= 70
									OR = {
										has_building = building_tea_plantation
										can_construct_building = building_tea_plantation
										has_building = building_coffee_plantation
										can_construct_building = building_coffee_plantation
										has_building = building_opium_plantation
										can_construct_building = building_opium_plantation
									}
								}
							}
							is_split_state = no
						}
						order_by = {
							value = state_population
							if = {
								limit = { state_population > root.var:srbe_var_random_state_population_subjects }
								multiply = 0.5
							}
						}
						min = 0
						max = root.var:srbe_var_add_arable_land_budget_num_subjects
						check_range_bounds = no
						if ={
							limit= {
								root = { gold_reserves >= 500000 }
							}
							state_region = { add_arable_land = 50 }
							root = { add_treasury = -500000 }
						}
					}
					root = { remove_variable = srbe_var_random_state_population_subjects }
				}
				set_variable = srbe_var_added_arable_land_in_this_subject
			}
		}
		every_subject_or_below = {
			limit = { has_variable = srbe_var_added_arable_land_in_this_subject }
			remove_variable = srbe_var_added_arable_land_in_this_subject
		}
	}
}