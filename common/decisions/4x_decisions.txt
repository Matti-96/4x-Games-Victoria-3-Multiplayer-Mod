# For moderator controlled Switzerland only
moderator_controlled_switzerland_decision = {
	is_shown = {
		exists = c:SWI
		this = c:SWI
		NOT = { has_variable = moderator_controlled_switzerland_decision_taken }
	}

	possible = {
		this = c:SWI
		hidden_trigger = { NOT = { has_variable = moderator_controlled_switzerland_decision_taken } }
	}
	
	when_taken = {
		trigger_event = { 
			id = moderator_event.1
			days = 0
			popup = yes
		}
	}

	ai_chance = {
		base = 0
	}
}

# AI-only decision to secretly initialize mid-game; cannot use a journal entry for this purpose because apparently JEs don't show up if they weren't there when the given AI country is first created, so I'm going to use a decision instead
# Also catches newly-formed (i.e., released) countries, although the Canonically Correct way of doing that would be via appropriate on actions
GDPGR_de_initialize = {
    is_shown = {
        is_ai = yes
        any_country = {
            NAND = {
                has_variable = before_gdp # Check if it doesn't exist
                var:before_gdp >= 0 # Check if it's a number
                has_variable = GDPGR_rolling_difference
                var:GDPGR_rolling_difference >= 0
            }
        }
    }
    
    when_taken = {
        if = {
            limit = {
                NOR = {
                    has_global_variable = GDPGR_year
                    has_global_variable = GDPGR_month
                }
            }
            GDPGR_initialize_all = yes
        }
        else = {
            every_country = {
                limit = {
                    NAND = {
                        has_variable = before_gdp
                        var:before_gdp >= 0
                    }
                }
                GDPGR_initialize_country = yes
            }
        }
    }
    
    ai_chance = {
        base = 1000000
    }
}

# Game Master decision to determine Game Master/Host
gm_player = {
	is_shown = {
		NOT = { has_global_variable = player_gm }
		is_player = yes
	}

	when_taken = {
		set_global_variable = player_gm
		add_modifier = {
			name = game_master
		}
	}
}

# Enables Game Master to use decisions on themself 
GM_Self_Action = {
	is_shown = {
		has_modifier = game_master
		NOT = { has_global_variable = GM_taking_action }
		NOT = { has_global_variable = single_player }
	}
	
	when_taken = {
		set_global_variable = {
			name = GM_taking_action
			days = 31
		}
		set_variable = { 
			name = actionee
			days = 95
		}
		trigger_event = {
			id = gm_actions.1
			days = 0
			popup = yes
		}
		every_country = {
			limit = {
				is_player = yes
			}
			post_notification = gm_self_action
		}
    }
}